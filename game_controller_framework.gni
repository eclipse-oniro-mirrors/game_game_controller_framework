# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

game_controller_framework_path = "//domains/game_controller/game_controller_framework"
game_controller_framework_innerkits_path = "${game_controller_framework_path}/frameworks/native"
game_controller_framework_capi_path = "${game_controller_framework_path}/interfaces/kits"


game_controller_service_path = "//domains/game_controller/game_controller_framework"

fuzztest_include_dirs = [
  "${game_controller_service_path}/service/common/include",
  "${game_controller_service_path}/service/event/include",
  "${game_controller_service_path}/service/device_manager/include",
  "${game_controller_service_path}/service/ipc/include",
  "${game_controller_service_path}/service/key_mapping/include",
]

fuzztest_sources = [
  "${game_controller_service_path}/service/common/src/json_utils.cpp",
  "${game_controller_service_path}/service/common/src/permission_utils.cpp",
  "${game_controller_service_path}/service/event/src/event_publisher.cpp",
  "${game_controller_service_path}/service/device_manager/src/device_manager.cpp",
  "${game_controller_service_path}/service/ipc/src/ability_event_handler.cpp",
  "${game_controller_service_path}/service/ipc/src/gamecontroller_server_ability.cpp",
  "${game_controller_service_path}/service/key_mapping/src/game_support_key_mapping_manager.cpp",
  "${game_controller_service_path}/service/key_mapping/src/key_mapping_config_manager.cpp",
]

fuzztest_external_deps = [
  "c_utils:utils",
  "eventhandler:libeventhandler",
  "ffrt:libffrt",
  "hilog:libhilog",
  "ipc:ipc_core",
  "ipc:ipc_single",
  "json:nlohmann_json_static",
  "safwk:system_ability_fwk",
  "samgr:samgr_proxy",
  "access_token:libaccesstoken_sdk",
  "access_token:libtokenid_sdk",
  "bundle_framework:appexecfwk_core",
]