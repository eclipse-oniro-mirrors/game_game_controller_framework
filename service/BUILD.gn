# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/ohos.gni")
import("//build/ohos_var.gni")
import(
    "//domains/game/game_controller_framework/game_controller_framework.gni")

config("gamecontroller_service_config") {
  visibility = [
    ":*",
    "//domains/game/game_controller_framework/service:*",
  ]
  include_dirs = [
    "${game_controller_service_path}/service/common/include",
    "${game_controller_service_path}/service/event/include",
    "${game_controller_service_path}/service/device_manager/include",
    "${game_controller_service_path}/service/ipc/include",
    "${game_controller_service_path}/service/key_mapping_manager/include",
  ]

  cflags = [ "-w" ]
  cflags_cc = []
}

gamecontroller_server_sources = [
  "common/src/json_utils.cpp",
  "common/src/permission_utils.cpp",
  "event/src/event_publisher.cpp",
  "device_manager/src/device_manager.cpp",
  "ipc/src/ability_event_handler.cpp",
  "ipc/src/gamecontroller_server_ability.cpp",
  "key_mapping_manager/src/game_support_key_mapping_manager.cpp",
  "key_mapping_manager/src/key_mapping_config_manager.cpp",
]

ohos_shared_library("gamecontroller_server") {
  install_enable = true
  sources = gamecontroller_server_sources
  configs = [ ":gamecontroller_service_config" ]
  deps = [ "${game_controller_framework_innerkits_path}:gamecontroller_client" ]
  external_deps = [
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "hilog:libhilog",
    "ipc:ipc_core",
    "ipc:ipc_single",
    "json:nlohmann_json_static",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "bundle_framework:appexecfwk_core",
  ]

  defines = []

  if (build_variant == "user") {
    defines += [ "ROM_USER_VERSION" ]
  }

  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  shlib_type = "sa"
  part_name = "game_controller_framework"
  subsystem_name = "game"
}
